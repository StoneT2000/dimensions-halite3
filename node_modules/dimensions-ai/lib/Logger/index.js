"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var colors_1 = __importDefault(require("colors"));
var LoggerLEVEL;
(function (LoggerLEVEL) {
    LoggerLEVEL[LoggerLEVEL["NONE"] = 0] = "NONE";
    LoggerLEVEL[LoggerLEVEL["ERROR"] = 1] = "ERROR";
    LoggerLEVEL[LoggerLEVEL["WARN"] = 2] = "WARN";
    LoggerLEVEL[LoggerLEVEL["INFO"] = 3] = "INFO";
    LoggerLEVEL[LoggerLEVEL["DETAIL"] = 4] = "DETAIL";
    LoggerLEVEL[LoggerLEVEL["SYSTEM"] = 5] = "SYSTEM";
    LoggerLEVEL[LoggerLEVEL["ALL"] = 6] = "ALL";
})(LoggerLEVEL = exports.LoggerLEVEL || (exports.LoggerLEVEL = {}));
/**
 * Dimensions Logging Class
 */
var Logger = /** @class */ (function () {
    function Logger(level, identifier) {
        if (level === void 0) { level = Logger.LEVEL.INFO; }
        if (identifier === void 0) { identifier = 'Log'; }
        this.level = level;
        //@ts-ignore
        this.identifierColor = colors_1.default.bold.green;
        this.identifier = identifier;
    }
    Logger.prototype.getIdentifier = function () {
        return this.identifierColor(this.identifier);
    };
    Logger.prototype.bar = function (type) {
        if (type === void 0) { type = ''; }
        return "\n-=-=-=-=-=-=-=-=-=-=-=-| " + type + " " + this.getIdentifier() + " |-=-=-=-=-=-=-=-=-=-=-=-\n";
    };
    Logger.prototype.systembar = function () {
        if (this.level >= Logger.LEVEL.SYSTEM)
            console.log(this.bar(colors_1.default.red('[SYSTEM]')));
    };
    Logger.prototype.system = function (message) {
        if (this.level >= Logger.LEVEL.SYSTEM)
            console.log(colors_1.default.red('[SYSTEM]') + " (" + this.identifier + ") - " + message);
    };
    Logger.prototype.detail = function (message) {
        if (this.level >= Logger.LEVEL.DETAIL)
            console.log(colors_1.default.grey('[DETAIL]') + " (" + this.identifier + ") - " + message);
    };
    Logger.prototype.detailbar = function () {
        if (this.level >= Logger.LEVEL.DETAIL)
            console.log(this.bar(colors_1.default.grey('[DETAIL]')));
    };
    Logger.prototype.infobar = function () {
        if (this.level >= Logger.LEVEL.INFO)
            console.log(this.bar(colors_1.default.blue('[INFO]')));
    };
    Logger.prototype.info = function (message) {
        if (this.level >= Logger.LEVEL.INFO)
            console.log(colors_1.default.blue('[INFO]') + " (" + this.identifier + ") - " + message);
    };
    Logger.prototype.warnbar = function () {
        if (this.level >= Logger.LEVEL.WARN)
            console.log(this.bar(colors_1.default.yellow('[WARN]')));
    };
    Logger.prototype.warn = function (message) {
        if (this.level >= Logger.LEVEL.WARN)
            console.log(colors_1.default.yellow('[WARN]') + " (" + this.identifier + ") - " + message);
    };
    Logger.prototype.errorbar = function () {
        if (this.level >= Logger.LEVEL.ERROR)
            console.log(this.bar(colors_1.default.red('[ERROR]')));
    };
    Logger.prototype.error = function (message) {
        if (this.level >= Logger.LEVEL.ERROR)
            console.log(colors_1.default.red('[ERROR]') + " (" + this.identifier + ") - " + message);
    };
    Logger.LEVEL = LoggerLEVEL;
    return Logger;
}());
exports.Logger = Logger;
//# sourceMappingURL=index.js.map