"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * API for Dimensions. Primarily returns all data there is to return
 */
var express_1 = __importDefault(require("express"));
var match_1 = __importDefault(require("./match"));
var error = __importStar(require("../../../error"));
var router = express_1.default.Router();
// Returns all observed dimensions
router.get('/', function (req, res) {
    res.json({ error: null, dimensions: req.app.get('dimensions') });
});
// middle ware for finding dimension by id
var findDimension = function (req, res, next) {
    var id = req.params.id;
    if (!id)
        return next(new error.BadRequest('ID must be provided'));
    var dimension = req.app.get('dimensions').filter(function (d) { return d.id == parseInt(id); })[0];
    if (!dimension) {
        return next(new error.BadRequest('No Dimension found'));
    }
    req.data.dimension = dimension;
    next();
};
// use the middleware
router.use('/:id', findDimension);
// Get a dimension and all its details
router.get('/:id', function (req, res) {
    res.json({ error: null, dimension: req.data.dimension });
});
router.use('/:id/match', match_1.default);
exports.default = router;
//# sourceMappingURL=index.js.map