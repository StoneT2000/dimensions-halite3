"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @class MatchError
 * @classdesc Standard Match Errors that do not stop a game, but signal to user of some kind of error with match
 */
var MatchError = /** @class */ (function (_super) {
    __extends(MatchError, _super);
    function MatchError(m) {
        var _this = _super.call(this, m) || this;
        _this.name = "Dimension.MatchError";
        return _this;
    }
    return MatchError;
}(Error));
exports.MatchError = MatchError;
/**
 * @class DimensionError
 * @classdesc Simple, standard errors reported by the Dimension framework
 */
var DimensionError = /** @class */ (function (_super) {
    __extends(DimensionError, _super);
    function DimensionError(m) {
        var _this = _super.call(this, m) || this;
        _this.name = "Dimension.Error";
        return _this;
    }
    return DimensionError;
}(Error));
exports.DimensionError = DimensionError;
/**
 * @class FatalError
 * @classdesc A fatal error that caused the Dimension framework to break
 */
var FatalError = /** @class */ (function (_super) {
    __extends(FatalError, _super);
    function FatalError(m) {
        var _this = _super.call(this, m) || this;
        _this.name = "Dimension.FatalError";
        return _this;
    }
    return FatalError;
}(Error));
exports.FatalError = FatalError;
//# sourceMappingURL=index.js.map